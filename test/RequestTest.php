<?php

namespace Ddup\Part\Test;

use Ddup\Part\Api\ApiResultInterface;
use Ddup\Part\Api\ApiResulTrait;
use Ddup\Part\Test\Provider\LoggerProvider;
use Ddup\Part\Test\Provider\MyClient;
use Ddup\Part\Test\Provider\ResultProvider;
use GuzzleHttp\MessageFormatter;

class RequestTest extends TestCase
{
    use ApiResulTrait;
    use MyClient;

    public function newResult($ret):ApiResultInterface
    {
        return new ResultProvider($ret);
    }

    protected function setUp()/* The :void return type declaration that should be here would cause a BC issue */
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $formater = new MessageFormatter('{req_body}');

        $this->pushMiddleware(\GuzzleHttp\Middleware::log(new LoggerProvider(), $formater), 'log');
    }

    public function test_json()
    {
        $response = $this->json('', ['age' => 20]);

        $this->parseResult($response);

        $this->assertNotNull($response);

        $this->assertEquals('application/json', $this->result()->getData()->get('CONTENT_TYPE'));

        $this->assertTrue($this->result()->isSuccess());
    }

    public function test_post()
    {
        $response = $this->post('', ['age' => 20]);

        $this->parseResult($response);

        $this->assertEquals('application/x-www-form-urlencoded', $this->result()->getData()->get('CONTENT_TYPE'));
    }
}